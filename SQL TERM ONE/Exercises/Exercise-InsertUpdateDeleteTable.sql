-- insert, update, delete operations (CrUD)
--**ToC
--1** INSERT INTO syntax:
--2** UPDATE syntax:
--3** DELETE syntax:

-- insert into a table
USE tempdb;
GO
DROP DATABASE IF EXISTS l03a;
GO
CREATE DATABASE l03a;
GO
USE l03a;
GO
EXEC sp_changedbowner 'sa';
GO

-- create a new table named player
CREATE TABLE player(
	playerId INT IDENTITY(1, 1),
	playerFirstName VARCHAR(25) NOT NULL,
	playerLastName VARCHAR(30) NOT NULL,
	playerQuizDate DATE,
	playerIsVideoGame BIT CONSTRAINT df_player_playerIsVideoGame DEFAULT 1,
	playerScore SMALLINT,
	CONSTRAINT pk_player_playerId PRIMARY KEY (playerId)	
);
SELECT * FROM player;

--1** INSERT INTO syntax:
--	INSERT INTO table_name (col1, col2, col3, ...)
--	VALUES (val1, val2, val3, ...);

-- insert a single record, w/ list of COMPLETE cols
-- playerId col value is OMITTED b/c it's been auto generated by IDENTITY(1, 1) function call
INSERT INTO player(playerFirstName,	playerLastName,		playerQuizDate,	playerIsVideoGame,	playerScore)
VALUES
				  ('Amelia',		'Ray',				'2020-09-07',	1,					1811);
SELECT * FROM player;

-- the col list can be OMMITTED, value order MUST be aligned w/ col order of table definition statement
INSERT INTO player
VALUES
				  ('Ava',			'Creamer',			'09/08/20',		1,					4650);
SELECT * FROM player;

-- insert single record, w/ specific col order
INSERT INTO player(playerLastName,	playerFirstName,	playerScore,	playerQuizDate,		playerIsVideoGame)
VALUES
				  ('Boucher',		'Jennifer',			4650,			'Sep 09, 2020',		1);
SELECT * FROM player;

-- insert MULTIPLE records using single statement
INSERT INTO player
VALUES
				  ('Kyle',			'Edwards',			'2020-09-10',	1,					2614),
				  ('David',			'Herd',				'2020-09-13',	1,					6700),
				  ('Mike',			'Slavinjak',		'2020-09-24',	1,					3594),
				  ('Merrill',		'Choudhry',			'2020-10-06',	1,					4892),
				  ('Sophia',		'Wardle',			'2020-10-08',	1,					4232),
				  ('Mia',			'Ho',				'2020-10-09',	1,					1507),
				  ('Fernando',		'Gross',			'2021-01-21',	1,					6480),
				  ('Charlotte',		'Nijjar',			'2021-01-24',	1,					4400),
				  ('Ryan',			'Li',				'2021-02-27',	1,					4847),
				  ('Emma',			'Houle',			'2021-02-27',	1,					4351),
				  ('Olivia',		'Maas',				'2021-03-27',	1,					4600),
				  ('Darren',		'Muetz',			'2021-04-19',	1,					2589),
				  ('Nancy',			'Combe',			'2021-09-13',	1,					4487),
				  ('Stephen',		'Shock',			'2021-10-18',	0,					2614),
				  ('Julianna',		'Smith',			'2021-10-21',	1,					6700),
				  ('Andrew',		'Strilec',			'2022-01-07',	1,					4574);
SELECT * FROM player;

-- insert a single record, w/ list of PARTIAL cols
INSERT INTO player(playerFirstName, playerLastName)
VALUES
				  ('Merrill',		'Macrillo');	-- default constraint auto kicks in
SELECT * FROM player;

-- NOT NULL constraint is triggered
INSERT INTO player
VALUES
				  (NULL,			'Doe',				NULL,			NULL,				NULL);	-- data integrity error: playerFirstName is NOT NULL
SELECT * FROM player;


-- the auto generated playerId col value can be manually created
SET IDENTITY_INSERT player ON;	-- the default is OFF for IDENTITY_INSERT
INSERT INTO player(playerId,	playerFirstName,	playerLastName,	playerQuizDate,	playerIsVideoGame,	playerScore)
--INSERT INTO player
VALUES
				  (99,			'x',				'y',			'2022-09-10',	1,					2614);
SET IDENTITY_INSERT player OFF;	-- tip: always returns to default after a task is completed
SELECT * FROM player;



--2** UPDATE syntax:
--	UPDATE table_name
--	SET col1 = value1, col2 = value2, ...
--	WHERE condition;

-- update table data
SELECT * FROM player;
SELECT TOP 3 *
FROM player;

-- change Jennifer Boucher's
--		last name = 'King',
--		score = 5,000
UPDATE player
SET playerLastName = 'King', playerScore = 5000
WHERE playerId = 3;
SELECT * FROM player;

-- for those players who have playerScore < 2000, add 10% of their original score:
UPDATE player
SET playerScore += playerScore * 0.10	-- the result is still an integer
WHERE playerScore < 2000
SELECT * FROM player;




--3** DELETE syntax:
--	DELETE FROM table_name
--	WHERE condition;

-- delete a SINGLE record
DELETE FROM player
WHERE playerId = 1;
SELECT * FROM player;

-- delete MULTIPLE records
DELETE FROM player
WHERE playerScore < 5000;
SELECT * FROM player;

-- delete ALL records (leads to an empty table)
-- method 1: slow, delete record by record
DELETE FROM player;

-- method 2: fast, not always work b/c reference integrity, etc.
TRUNCATE TABLE player;

SELECT * FROM player;
